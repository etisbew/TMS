<?php

namespace Proxies\__CG__\TMS\AuthorsBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Authors extends \TMS\AuthorsBundle\Entity\Authors implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'TMS\\AuthorsBundle\\Entity\\Authors' . "\0" . 'id', '' . "\0" . 'TMS\\AuthorsBundle\\Entity\\Authors' . "\0" . 'user', '' . "\0" . 'TMS\\AuthorsBundle\\Entity\\Authors' . "\0" . 'parent_submission', '' . "\0" . 'TMS\\AuthorsBundle\\Entity\\Authors' . "\0" . 'name', '' . "\0" . 'TMS\\AuthorsBundle\\Entity\\Authors' . "\0" . 'dob', '' . "\0" . 'TMS\\AuthorsBundle\\Entity\\Authors' . "\0" . 'dead_when', '' . "\0" . 'TMS\\AuthorsBundle\\Entity\\Authors' . "\0" . 'anonymous', '' . "\0" . 'TMS\\AuthorsBundle\\Entity\\Authors' . "\0" . 'pseudonymousn', '' . "\0" . 'TMS\\AuthorsBundle\\Entity\\Authors' . "\0" . 'pseudonym', '' . "\0" . 'TMS\\AuthorsBundle\\Entity\\Authors' . "\0" . 'contribution', '' . "\0" . 'TMS\\AuthorsBundle\\Entity\\Authors' . "\0" . 'completed_year', '' . "\0" . 'TMS\\AuthorsBundle\\Entity\\Authors' . "\0" . 'published_when', '' . "\0" . 'TMS\\AuthorsBundle\\Entity\\Authors' . "\0" . 'published_where', '' . "\0" . 'TMS\\AuthorsBundle\\Entity\\Authors' . "\0" . 'isbn', '' . "\0" . 'TMS\\AuthorsBundle\\Entity\\Authors' . "\0" . 'nationality', '' . "\0" . 'TMS\\AuthorsBundle\\Entity\\Authors' . "\0" . 'citizen', '' . "\0" . 'TMS\\AuthorsBundle\\Entity\\Authors' . "\0" . 'domicilied');
        }

        return array('__isInitialized__', '' . "\0" . 'TMS\\AuthorsBundle\\Entity\\Authors' . "\0" . 'id', '' . "\0" . 'TMS\\AuthorsBundle\\Entity\\Authors' . "\0" . 'user', '' . "\0" . 'TMS\\AuthorsBundle\\Entity\\Authors' . "\0" . 'parent_submission', '' . "\0" . 'TMS\\AuthorsBundle\\Entity\\Authors' . "\0" . 'name', '' . "\0" . 'TMS\\AuthorsBundle\\Entity\\Authors' . "\0" . 'dob', '' . "\0" . 'TMS\\AuthorsBundle\\Entity\\Authors' . "\0" . 'dead_when', '' . "\0" . 'TMS\\AuthorsBundle\\Entity\\Authors' . "\0" . 'anonymous', '' . "\0" . 'TMS\\AuthorsBundle\\Entity\\Authors' . "\0" . 'pseudonymousn', '' . "\0" . 'TMS\\AuthorsBundle\\Entity\\Authors' . "\0" . 'pseudonym', '' . "\0" . 'TMS\\AuthorsBundle\\Entity\\Authors' . "\0" . 'contribution', '' . "\0" . 'TMS\\AuthorsBundle\\Entity\\Authors' . "\0" . 'completed_year', '' . "\0" . 'TMS\\AuthorsBundle\\Entity\\Authors' . "\0" . 'published_when', '' . "\0" . 'TMS\\AuthorsBundle\\Entity\\Authors' . "\0" . 'published_where', '' . "\0" . 'TMS\\AuthorsBundle\\Entity\\Authors' . "\0" . 'isbn', '' . "\0" . 'TMS\\AuthorsBundle\\Entity\\Authors' . "\0" . 'nationality', '' . "\0" . 'TMS\\AuthorsBundle\\Entity\\Authors' . "\0" . 'citizen', '' . "\0" . 'TMS\\AuthorsBundle\\Entity\\Authors' . "\0" . 'domicilied');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Authors $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setUser($user)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUser', array($user));

        return parent::setUser($user);
    }

    /**
     * {@inheritDoc}
     */
    public function getUser()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUser', array());

        return parent::getUser();
    }

    /**
     * {@inheritDoc}
     */
    public function setParentSubmission($parentSubmission)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setParentSubmission', array($parentSubmission));

        return parent::setParentSubmission($parentSubmission);
    }

    /**
     * {@inheritDoc}
     */
    public function getParentSubmission()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getParentSubmission', array());

        return parent::getParentSubmission();
    }

    /**
     * {@inheritDoc}
     */
    public function setName($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', array($name));

        return parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', array());

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setDob($dob)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDob', array($dob));

        return parent::setDob($dob);
    }

    /**
     * {@inheritDoc}
     */
    public function getDob()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDob', array());

        return parent::getDob();
    }

    /**
     * {@inheritDoc}
     */
    public function setDeadWhen($deadWhen)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDeadWhen', array($deadWhen));

        return parent::setDeadWhen($deadWhen);
    }

    /**
     * {@inheritDoc}
     */
    public function getDeadWhen()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDeadWhen', array());

        return parent::getDeadWhen();
    }

    /**
     * {@inheritDoc}
     */
    public function setAnonymous($anonymous)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAnonymous', array($anonymous));

        return parent::setAnonymous($anonymous);
    }

    /**
     * {@inheritDoc}
     */
    public function getAnonymous()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAnonymous', array());

        return parent::getAnonymous();
    }

    /**
     * {@inheritDoc}
     */
    public function setPseudonymousn($pseudonymousn)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPseudonymousn', array($pseudonymousn));

        return parent::setPseudonymousn($pseudonymousn);
    }

    /**
     * {@inheritDoc}
     */
    public function getPseudonymousn()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPseudonymousn', array());

        return parent::getPseudonymousn();
    }

    /**
     * {@inheritDoc}
     */
    public function setPseudonym($pseudonym)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPseudonym', array($pseudonym));

        return parent::setPseudonym($pseudonym);
    }

    /**
     * {@inheritDoc}
     */
    public function getPseudonym()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPseudonym', array());

        return parent::getPseudonym();
    }

    /**
     * {@inheritDoc}
     */
    public function setContribution($contribution)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setContribution', array($contribution));

        return parent::setContribution($contribution);
    }

    /**
     * {@inheritDoc}
     */
    public function getContribution()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getContribution', array());

        return parent::getContribution();
    }

    /**
     * {@inheritDoc}
     */
    public function setCompletedYear($completedYear)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCompletedYear', array($completedYear));

        return parent::setCompletedYear($completedYear);
    }

    /**
     * {@inheritDoc}
     */
    public function getCompletedYear()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCompletedYear', array());

        return parent::getCompletedYear();
    }

    /**
     * {@inheritDoc}
     */
    public function setPublishedWhen($publishedWhen)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPublishedWhen', array($publishedWhen));

        return parent::setPublishedWhen($publishedWhen);
    }

    /**
     * {@inheritDoc}
     */
    public function getPublishedWhen()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPublishedWhen', array());

        return parent::getPublishedWhen();
    }

    /**
     * {@inheritDoc}
     */
    public function setPublishedWhere($publishedWhere)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPublishedWhere', array($publishedWhere));

        return parent::setPublishedWhere($publishedWhere);
    }

    /**
     * {@inheritDoc}
     */
    public function getPublishedWhere()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPublishedWhere', array());

        return parent::getPublishedWhere();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsbn($isbn)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsbn', array($isbn));

        return parent::setIsbn($isbn);
    }

    /**
     * {@inheritDoc}
     */
    public function getIsbn()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIsbn', array());

        return parent::getIsbn();
    }

    /**
     * {@inheritDoc}
     */
    public function setNationality($nationality)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNationality', array($nationality));

        return parent::setNationality($nationality);
    }

    /**
     * {@inheritDoc}
     */
    public function getNationality()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNationality', array());

        return parent::getNationality();
    }

    /**
     * {@inheritDoc}
     */
    public function setCitizen($citizen)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCitizen', array($citizen));

        return parent::setCitizen($citizen);
    }

    /**
     * {@inheritDoc}
     */
    public function getCitizen()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCitizen', array());

        return parent::getCitizen();
    }

    /**
     * {@inheritDoc}
     */
    public function setDomicilied($domicilied)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDomicilied', array($domicilied));

        return parent::setDomicilied($domicilied);
    }

    /**
     * {@inheritDoc}
     */
    public function getDomicilied()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDomicilied', array());

        return parent::getDomicilied();
    }

}
